# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    telegram_bot_token: '%env(TELEGRAM_BOT_TOKEN)%'
    telegram_route_secret: '%env(TELEGRAM_ROUTE_SECRET)%'
    app.version: '0.1.0'

#imports: # не работает так =(
#    - { resource: services_health.yaml }

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    GuzzleHttp\Client:
        arguments:
            $config:
                timeout: 30

    App\HealthTracker\Infrastructure\Telegram\Command\HelpTelegramCommand:
        arguments:
            - '@twig'
            - '@boshurik_telegram_bot.command.registry.default'
        tags:
            - { name: boshurik_telegram_bot.command, priority: -1024 }

    _instanceof:
        App\Shared\Application\Command\CommandHandlerInterface:
            tags:
                - { name: messenger.message_handler, bus: command.bus }

        App\Shared\Application\Query\QueryHandlerInterface:
            tags:
                - { name: messenger.message_handler, bus: query.bus }


    # Health Check Checkers автоконфигурация
#    App\Shared\Infrastructure\HealthCheck\:
#        resource: '../src/Shared/Infrastructure/HealthCheck/*'
#        tags: ['health_check.checker']
    App\Shared\Infrastructure\HealthCheck\DatabaseChecker:
        arguments:
            $connection: '@doctrine.dbal.default_connection'
        tags: ['health_check.checker']

    App\Shared\Infrastructure\HealthCheck\CacheChecker:
        arguments:
            $cache: '@cache.app'
        tags: ['health_check.checker']

    App\Shared\Infrastructure\HealthCheck\FilesystemChecker:
        arguments:
            $projectDir: '%kernel.project_dir%'
        tags: ['health_check.checker']

    App\Shared\Infrastructure\HealthCheck\SystemResourcesChecker:
        arguments:
            $projectDir: '%kernel.project_dir%'
        tags: ['health_check.checker']

    # Health Check Service
    App\Shared\Application\Service\HealthCheck\HealthCheckService:
        bind:
            $checkers: !tagged_iterator 'health_check.checker'
            $version: '%app.version%'
